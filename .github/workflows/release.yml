name: Release

on:
  push:
    tags:
      - 'v*' # 'v1.0.0' のようなタグが作成されたときにトリガー

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            suffix: ""
          - goos: linux
            goarch: arm64
            suffix: ""
          - goos: darwin
            goarch: amd64
            suffix: ""
          - goos: darwin
            goarch: arm64
            suffix: ""
          - goos: windows
            goarch: amd64
            suffix: ".exe"
    
    steps:
      - name: Checkout code
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # v3.0.2
        with:
          fetch-depth: 0 # すべての履歴とタグを取得
      
      - name: Set up Go
        uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
        with:
          go-version: '^1.21' # プロジェクトに合わせて調整してください
      
      - name: Get Version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      
      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          # バージョン情報を取得
          VERSION=${GITHUB_REF#refs/tags/}
          COMMIT_SHA=$(git rev-parse HEAD)
          BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          
          # ビルドフラグを設定
          LD_FLAGS="-X github.com/sa-giga/saga-cli/cmd/saga/cmd.Version=${VERSION} -X github.com/sa-giga/saga-cli/cmd/saga/cmd.CommitSHA=${COMMIT_SHA} -X github.com/sa-giga/saga-cli/cmd/saga/cmd.BuildDate=${BUILD_DATE}"
          
          # バイナリをビルド
          BINARY_NAME="saga-${VERSION}-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.suffix }}"
          go build -ldflags "${LD_FLAGS}" -o "${BINARY_NAME}" ./cmd/saga
          
          # アーティファクト名を環境変数に設定
          echo "BINARY_NAME=${BINARY_NAME}" >> $GITHUB_ENV
      
      - name: Upload artifacts
        uses: actions/upload-artifact@83fd05a356d7e2593de66fc9913b3002723633cb # v3.1.3
        with:
          name: ${{ env.BINARY_NAME }}
          path: ${{ env.BINARY_NAME }}
          if-no-files-found: error

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@9782bd6a9848574566825c0a753429b59a8e71ea # v3.0.2
        
      - name: Create GitHub Release
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844 # v0.1.15
        with:
          files: saga-*/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}